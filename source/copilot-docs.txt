.. _vsce-copilot-docs:

==============
/docs Command
==============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

The ``/docs`` command provides MongoDB-specific information,
supplemented by links to MongoDB Documentation. The |copilot| uses
Retrival-Augmented Generation (RAG) to generate responses based on the
latest version of MongoDB Documentation.

Examples
--------

The rest of this page illustrates example use cases for the ``/docs``
command:

Instructional Questions
~~~~~~~~~~~~~~~~~~~~~~~

You can use the ``/docs`` command to ask how to perform specific
operations. The following prompt asks for information on creating an
index in the GitHub Copilot chat:

.. code-block:: none
   :copyable: false

   @MongoDB /docs how do I create an index?

The chat first provides the following MongoDB documentation:

- `Create an Index <https://www.mongodb.com/docs/manual/core/indexes/create-index/>`__
- `createIndexes <https://mongodb.com/docs/manual/reference/command/createIndexes/>`__
- `Getting Started with MongoDB and Java - CRUD Operations Tutorial <https://www.mongodb.com/developer/languages/java/java-setup-crud-operations>`__
- `db.collection.createIndex() <https://mongodb.com/docs/manual/reference/method/db.collection.createIndex/>`__
   
The |copilot| also returns a text response with information about
creating an index:

.. code-block:: none
   :copyable: false

   To create an index in MongoDB, you can use the createIndex() method
   in the MongoDB Shell or the equivalent method for your specific
   driver. Here are examples for different programming languages:

   MongoDB Shell

      db.collection.createIndex({ <key and index type specification> }, { <options> })

   C#

      collection.CreateIndex(IndexKeys<collection>.<key and index type
      specification>, <options>);
      
   ...

   Indexes support efficient execution of queries in MongoDB. If your
   application is repeatedly running queries on the same fields,
   creating an index on those fields can significantly improve
   performance. However, keep in mind that while indexes improve query
   performance, they can negatively impact write operations due to the
   additional overhead of maintaining the index.

.. figure:: /images/copilot-docs.png
   :figwidth: 700px
   :alt: Screenshot of copilot providing information on creating an index
   
Strategic Questions
~~~~~~~~~~~~~~~~~~~

You can also use the ``/docs`` command to ask for operation
recommendations. The following prompt asks for a recommendation on the
best way to perform semantic search:

.. code-block:: none
   :copyable: false

   @MongoDB /docs what is the best way to perform semantic search on my
   data?
   
The Copilot response recommends using Atlas Vector Search and provides
the following links to MongoDB documentation:

- `Atlas Vector Search Overview <https://www.mongodb.com/docs/atlas/atlas-vector-search/vector-search-overview/>_
- `How to Do Semantic Search in MongoDB Using Atlas Vector Search <https://www.mongodb.com/developer/products/atlas/semantic-search-mongodb-atlas-vector-search/>`_
- `How to Perform Semantic Search Against Data in Your Atlas Cluster <https://www.mongodb.com/docs/atlas/atlas-vector-search/tutorials/vector-search-tutorial/>`__

The response also includes steps to get started with Atlas Vector
Search, with a code example:

.. figure:: /images/copilot-docs2.png
   :figwidth: 700px
   :alt: Screenshot of copilot providing information on using vector search