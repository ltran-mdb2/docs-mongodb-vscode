.. _vsce-copilot:

==================================
MongoDB Github Copilot Participant
==================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol


|vsce-full| automatically includes a MongoDB Github Copilot Participant
to assist in using Copilot with your MongoDB deployments. Through
Copilot's chat feature, users with |vsce| can interact their MongoDB
clusters and generate code with MongoDB domain-specific knowledge on top
of VSCode Copilot's LLM. 

/query
------

Users can use the ``/query`` command to generate queries from a natural
language against a connected MongoDB cluster. The MongoDB Participant
provides underlying schema information of the relevant collections and
MongoDB domain specific knowledge to Copilot to generate a response.
When the LLM generates a query, users can open the query in a playground
file or run the query directly in their collection. 

/query Example
~~~~~~~~~~~~~~

Consider a ``fruits`` collection that contains documents with the
following structure:

.. code-block:: javascript
   :copyable: false

   {
      _id: 1,
      item: "tangerine",
      type: "citrus"
   }
   
   
In the Github Copilot Chat tab, you can ask the MongoDB Copilot
participant to generate a query to find all documents in the ``fruits``
collection that have the type ``citrus``. 

.. code-block:: javascript
   :copyable: false

   @MongoDB /query find all documents in the fruits collection that have
   the type citrus

The Github Copilot Chat uses the MongoDB Copilot Participant to generate
the following query using knowledge of your database schema:

.. code-block:: javascript
   
   use('fruit');
   db.getCollection('fruit').find({ type: 'citrus' });






